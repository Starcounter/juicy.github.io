/**
 * Uniform.css
 * (c) Starcounter
 * version: 0.3.0
 */

:host {
  /* all non-uni-prefixed variables (--blue, --dark-blue, etc..) are inherited from "underwear.css" */
  --uni-default-white: var(--white, #ffffff);

  --uni-default-gray-1: var(--gray-1, #f9f9f9);
  --uni-default-gray-2: var(--gray-2, #f6f6f6);
  --uni-default-gray-3: var(--gray-3, #efefef);
  --uni-default-gray-4: var(--gray-4, #e7e7e7);
  --uni-default-gray-5: var(--gray-5, #e1e1e1);
  --uni-default-gray-6: var(--gray-6, #868e96);
  --uni-default-gray-7: var(--gray-7, #606c76);

  --uni-default-transparent-black: var(--transparent-black, #00000033);

  --uni-default-blue: var(--blue, #0084b4);
  --uni-default-dark-blue: var(--dark-blue, #1a587f);
  --uni-default-dark: var(--dark, #141d26);
  --uni-default-green: var(--green, #3fa13f);
  --uni-default-inky: var(--inky, #1b2936);
  --uni-default-livid: var(--livid, #8696a5);
  --uni-default-mouse: var(--mouse, #e7ecf0);
  --uni-default-red: var(--red, #df4534);
  --uni-default-yellow: var(--yellow, #ffdb25);

  /* only use uni colors below this line */

  --uni-default-primary: var(--uni-blue, var(--uni-default-blue));
  --uni-default-secondary: var(--uni-blue, var(--uni-default-blue));
  --uni-default-success: var(--uni-green, var(--uni-default-green));
  --uni-default-danger: var(--uni-red, var(--uni-default-red));
  --uni-default-warning: var(--uni-yellow, var(--uni-default-yellow));
  --uni-default-disabled: var(--uni-gray-5, var(--uni-default-gray-5));

  --uni-default-section-padding-horizontal: 40px;
  --uni-default-section-padding-vertical: 20px;
}
/* We need sepearate selector for browsers that does not support :host */
:root {
  /* all non-uni-prefixed variables (--blue, --dark-blue, etc..) are inherited from "underwear.css" */
  --uni-default-white: var(--white, #ffffff);

  --uni-default-gray-1: var(--gray-1, #f9f9f9);
  --uni-default-gray-2: var(--gray-2, #f6f6f6);
  --uni-default-gray-3: var(--gray-3, #efefef);
  --uni-default-gray-4: var(--gray-4, #e7e7e7);
  --uni-default-gray-5: var(--gray-5, #e1e1e1);
  --uni-default-gray-6: var(--gray-6, #868e96);
  --uni-default-gray-7: var(--gray-7, #606c76);

  --uni-default-transparent-black: var(--transparent-black, #00000033);

  --uni-default-blue: var(--blue, #0084b4);
  --uni-default-dark-blue: var(--dark-blue, #1a587f);
  --uni-default-dark: var(--dark, #141d26);
  --uni-default-green: var(--green, #3fa13f);
  --uni-default-inky: var(--inky, #1b2936);
  --uni-default-livid: var(--livid, #8696a5);
  --uni-default-mouse: var(--mouse, #e7ecf0);
  --uni-default-red: var(--red, #df4534);
  --uni-default-yellow: var(--yellow, #ffdb25);

  /* only use uni colors below this line */

  --uni-default-primary: var(--uni-blue, var(--uni-default-blue));
  --uni-default-secondary: var(--uni-blue, var(--uni-default-blue));
  --uni-default-success: var(--uni-green, var(--uni-default-green));
  --uni-default-danger: var(--uni-red, var(--uni-default-red));
  --uni-default-warning: var(--uni-yellow, var(--uni-default-yellow));
  --uni-default-disabled: var(--uni-gray-5, var(--uni-default-gray-5));

  --uni-default-section-padding-horizontal: 40px;
  --uni-default-section-padding-vertical: 20px;
}

/**
  * .uni-label-control
  * Puts label (slotted or not) in the left column, everything else in the right column
 */

.uni-label-control {
  display: grid;
  grid-template: "label";
  grid-gap: 1rem;
  align-items: baseline;
  justify-content: start;
  justify-items: start;
}

.uni-label-control > ::slotted(label) {
  text-align: left;
  grid-area: label;
  font-size: 12px;
}
.uni-label-control > label {
  text-align: left;
  grid-area: label;
  font-size: 12px;
}

/**
Buttons
*/

.uni-primary-button,
.uni-success-button,
.uni-danger-button,
.uni-flat-button {
  display: inline-block;
}
.uni-flat-button {
  min-width: auto;
}

/* Style a button that is a light DOM content, probably functional element bound to the database */
.uni-primary-button > ::slotted(button) {
  color: #fff !important;
  background-color: var(--uni-primary, var(--uni-default-primary)) !important;
}
/* In case a button is used in Shadow DOM, for example, to perform visual-only action, like collapsing the accordion.
  This approach is also required to cover polyfill browsers and polyfill limitations.
*/
.uni-primary-button > button {
  color: #fff !important;
  background-color: var(--uni-primary, var(--uni-default-primary)) !important;
}

.uni-success-button > ::slotted(button) {
  background-color: var(--uni-success, var(--uni-default-success)) !important;
  color: var(--uni-white, var(--uni-default-white)) !important;
}
.uni-success-button > button {
  background-color: var(--uni-success, var(--uni-default-success)) !important;
  color: var(--uni-white, var(--uni-default-white)) !important;
}

.uni-danger-button > ::slotted(button) {
  background-color: var(--uni-danger, var(--uni-default-danger)) !important;
  color: var(--uni-white, var(--uni-default-white)) !important;
}
.uni-danger-button > button {
  background-color: var(--uni-danger, var(--uni-default-danger)) !important;
  color: var(--uni-white, var(--uni-default-white)) !important;
}

.uni-flat-button > ::slotted(button) {
  background-color: transparent !important;
  color: var(--uni-blue, var(--uni-default-blue)) !important;
  box-shadow: none !important;
  min-width: auto !important;
  margin-left: 16px !important;
  margin-right: 16px !important;

}
.uni-flat-button > button {
  background-color: transparent !important;
  color: var(--uni-blue, var(--uni-default-blue)) !important;
  box-shadow: none !important;
  min-width: auto !important;
  padding-left: 16px !important;
  padding-right: 16px !important;
  margin-left: 10px !important;
  margin-right: 10px !important;
}

.uni-primary-button > ::slotted(button:hover),
.uni-primary-button > ::slotted(button:focus),
.uni-success-button > ::slotted(button:hover),
.uni-success-button > ::slotted(button:focus),
.uni-danger-button > ::slotted(button:hover),
.uni-danger-button > ::slotted(button:focus) {
  filter: brightness(90%) !important;
}
.uni-flat-button > ::slotted(button:hover),
.uni-flat-button > ::slotted(button:focus) {
  background-color: var(--uni-gray-2, var(--uni-default-gray-2)) !important;
}
.uni-primary-button > button:hover,
.uni-primary-button > button:focus,
.uni-success-button > button:hover,
.uni-success-button > button:focus,
.uni-danger-button > button:hover,
.uni-danger-button > button:focus {
  filter: brightness(90%) !important;
}
.uni-flat-button > button:hover,
.uni-flat-button > button:focus {
  background-color: var(--uni-gray-2, var(--uni-default-gray-2)) !important;
}

.uni-primary-button > ::slotted(button[disabled]),
.uni-success-button > ::slotted(button[disabled]),
.uni-danger-button > ::slotted(button[disabled]),
.uni-flat-button > ::slotted(button[disabled]) {
  opacity: .65 !important;
  box-shadow: initial !important;
}
.uni-flat-button > ::slotted(button[disabled]) {
  color: var(--uni-livid, var(--uni-default-livid)) !important;
}
.uni-primary-button > button[disabled],
.uni-success-button > button[disabled],
.uni-danger-button > button[disabled],
.uni-flat-button > button[disabled] {
  opacity: .65 !important;
  box-shadow: initial !important;
}
.uni-flat-button > button[disabled] {
  color: var(--uni-livid, var(--uni-default-livid)) !important;
}

.uni-primary-button > ::slotted(button[disabled]:hover),
.uni-primary-button > ::slotted(button[disabled]:focus),
.uni-success-button > ::slotted(button[disabled]:hover),
.uni-success-button > ::slotted(button[disabled]:focus),
.uni-danger-button > ::slotted(button[disabled]:hover),
.uni-danger-button > ::slotted(button[disabled]:focus) {
  filter: initial !important;
}
.uni-flat-button > ::slotted(button[disabled]:hover),
.uni-flat-button > ::slotted(button[disabled]:focus) {
  background-color: transparent !important;
}
.uni-primary-button > button[disabled]:hover,
.uni-primary-button > button[disabled]:focus,
.uni-success-button > button[disabled]:hover,
.uni-success-button > button[disabled]:focus,
.uni-danger-button > button[disabled]:hover,
.uni-danger-button > button[disabled]:focus {
  filter: initial !important;
}
.uni-flat-button > button[disabled]:hover,
.uni-flat-button > button[disabled]:focus {
  background-color: transparent !important;
}

/**
Pagination
*/

.uni-pagination {
  border: 1px solid var(--uni-gray-5, var(--uni-default-gray-5));
  border-radius: 5px;
  height: 36px;
  padding: 1px;
  margin: 10px 0px;
  display: inline-flex;
  align-items: center;
}

.uni-pagination > ::slotted(a),
.uni-pagination > * > ::slotted(a) {
  font-family: inherit;
  font-size: 1em;
  padding: 0 5px;
  margin: 5px 2px;
  border: 1px solid #fff;
  color: var(--uni-primary, var(--uni-default-primary));
  cursor: pointer;
  display: inline-block;
}

.uni-pagination > .uni-pages > a {
  font-family: inherit;
  font-size: 1em;
  padding: 0 5px;
  margin: 5px 2px;
  border: 1px solid #fff;
  color: var(--uni-primary, var(--uni-default-primary));
  cursor: pointer;
  display: inline-block;
}

.uni-pagination > .uni-pages > a {
  font-family: inherit;
  font-size: 1em;
  margin: 5px 2px;
  color: var(--uni-primary, var(--uni-default-primary));
  cursor: pointer;
  display: inline-block;
  padding: 0px 7px;
}

.uni-pagination > .uni-pages {
  display: flex;
}

.uni-pagination > .uni-pages > ::slotted([aria-current]:not([aria-current="false"])) {
  border: 1px solid var(--uni-primary, var(--uni-default-primary));
}

.uni-pagination > .uni-pages > [aria-current]:not([aria-current="false"]) {
  border: 1px solid var(--uni-primary, var(--uni-default-primary));
}

.uni-pagination
  > .uni-pages
  > ::slotted(*:hover:not([aria-current]):not(:disabled):not([disabled])),
.uni-pagination
  > .uni-pages
  > ::slotted(*:hover[aria-current="false"]:not(:disabled):not([disabled])) {
  background-color: var(--uni-gray-2, var(--uni-default-gray-2)) !important;
}

.uni-pagination
  > .uni-pages
  > *:hover:not([aria-current]):not(:disabled):not([disabled]),
.uni-pagination
  > .uni-pages
  > *:hover[aria-current="false"]:not(:disabled):not([disabled]) {
  background-color: var(--uni-gray-2, var(--uni-default-gray-2)) !important;
}

.uni-pagination > * > ::slotted([disabled]),
.uni-pagination > * > ::slotted([disabled]) {
  background-color: #eee!important; /* to override normalize.css anchor transparent bg */
  color: #aaa;
  cursor: default;
}
.uni-pagination > * > :disabled,
.uni-pagination > * > [disabled] {
  background: #eee!important; /* to override normalize.css anchor transparent bg */
  color: #aaa;
  cursor: default;
}

.uni-pagination > .uni-previous > ::slotted(*) {
  padding-right: 1em;
  border: 2px solid transparent;
  border-right: 2px solid #ddd;
  margin: 0px;
  margin-right: 8px;
  margin-left: 6px;
}

.uni-pagination > .uni-previous > ::slotted(*:hover) {
  background-color: var(--uni-default-gray-2)
}

.uni-pagination > .uni-next > ::slotted(*:hover) {
  background-color: var(--uni-default-gray-2)
}

.uni-pagination > .uni-previous > * {
  padding-right: 1em;
  border: 2px solid transparent;
  border-right: 2px solid #ddd;
  margin: 0px;
  margin-right: 8px;
  margin-left: 6px;
  cursor: pointer;
}

.uni-pagination > .uni-next > ::slotted(*) {
  padding-left: 1em;
  border: 2px solid transparent;
  border-left: 2px solid #ddd;
  margin-left: 8px;
  margin-right: 6px;
  cursor: pointer;
}

.uni-pagination > .uni-next > * {
  padding-left: 1em;
  border: 2px solid transparent;
  border-left: 2px solid #ddd;
  margin-left: 8px;
  margin-right: 6px;
  cursor: pointer;
}

.uni-pagination > .uni-previous > *:hover,
.uni-pagination > .uni-next > *:hover {
  background-color: var(--uni-default-gray-2)
}


/**
 Forms
 */

.uni-form > ::slotted(div) {
  margin-bottom: 20px;
}
.uni-form > div {
  margin-bottom: 20px;
}

.uni-form > ::slotted(div:last-child) {
  margin-bottom: 10px;
}
.uni-form > div:last-child {
  margin-bottom: 10px;
}

/**
  Alerts
  */
.uni-alert-info > ::slotted(*),
.uni-alert-danger > ::slotted(*),
.uni-alert-success > ::slotted(*),
.uni-alert-warning > ::slotted(*) {
  padding: 20px;
  border: 1px solid transparent;
  border-radius: 2px;
  position: relative;
}
.uni-alert-info > *,
.uni-alert-danger > *,
.uni-alert-success > *,
.uni-alert-warning > * {
  padding: 20px;
  border: 1px solid transparent;
  border-radius: 2px;
  position: relative;
}

.uni-alert-info > ::slotted(*) {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1;
}
.uni-alert-info > * {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1;
}

.uni-alert-danger > ::slotted(*) {
  color: var(--uni-white, var(--uni-default-white));
  background-color: var(--uni-danger, var(--uni-default-danger));
  border-color: var(--uni-danger, var(--uni-default-danger));
}
.uni-alert-danger > * {
  color: var(--uni-white, var(--uni-default-white));
  background-color: var(--uni-danger, var(--uni-default-danger));
  border-color: var(--uni-danger, var(--uni-default-danger));
}

.uni-alert-success > ::slotted(*) {
  color: var(--uni-white, var(--uni-default-white));
  background-color: var(--uni-success, var(--uni-default-success));
  border-color: var(--uni-success, var(--uni-default-success));
}
.uni-alert-success > * {
  color: var(--uni-white, var(--uni-default-white));
  background-color: var(--uni-success, var(--uni-default-success));
  border-color: var(--uni-success, var(--uni-default-success));
}

.uni-alert-warning > ::slotted(*) {
  color: var(--uni-dark, var(--uni-default-dark));
  background-color: var(--uni-warning, var(--uni-default-warning));
  border-color: var(--uni-warning, var(--uni-default-warning));
}
.uni-alert-warning > * {
  color: var(--uni-dark, var(--uni-default-dark));
  background-color: var(--uni-warning, var(--uni-default-warning));
  border-color: var(--uni-warning, var(--uni-default-warning));
}

/*
 * Card
 */
.uni-card {
  position: relative;
  box-sizing: border-box;
  color: var(--uni-dark, var(--uni-default-dark));
  background-color: var(--uni-white, var(--uni-default-white));
  border-radius: 3px;
  padding: 16px;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.4);
}

.uni-card > details summary {
  text-align: right;
  box-sizing: border-box;
  padding: 6px;
  
  outline: none;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
}
.uni-card > details summary:focus {
  outline-color: #999;
  outline-style: dotted;
  outline-width: 1em;
  outline-width: 1px;
}

.uni-card > details:last-of-type {
  /* to make up for the card padding */
  margin-bottom: -10px;
}

.uni-card > details > div {
  border-top: 1px solid #eee;
  box-sizing: border-box;
  padding: 6px 0px 2px;
}

@keyframes fadeInDown {
  0% {
      opacity: 0;
      transform: translateY(-1.25em);
  }
  100% {
      opacity: 1;
      transform: translateY(0);
  }
}

.uni-card > details[open]  > div {
  animation-name: fadeInDown;
  animation-duration: 0.5s;
}

/*
 * Sections
 */
.uni-section-primary,
.uni-section-secondary,
.uni-section-tertiary {
  padding: var(--uni-section-padding-vertical, var(--uni-default-section-padding-vertical)) var(--uni-section-padding-horizontal, var(--uni-default-section-padding-horizontal));
}

.uni-section-primary {
  background: rgb(231, 236, 240);
}

.uni-section-secondary {
  background: var(--uni-white, var(--uni-default-white));
}

.uni-section-tertiary {
  background: rgb(27, 41, 54);
  color: white;
}


/*
 * Title
 */

.uni-title> ::slotted(*) {
  letter-spacing: initial !important;
  line-height: initial !important;
  font-weight: initial !important;
  font-size: 20px !important;
}

.uni-title>* {
  letter-spacing: initial !important;
  line-height: initial !important;
  font-weight: initial !important;
  font-size: 20px !important;
}


/* title in a section */

.uni-section-primary>.uni-title> ::slotted(*),
.uni-section-secondary>.uni-title> ::slotted(*),
.uni-section-tertiary>.uni-title> ::slotted(*),
.uni-section-primary.uni-title> ::slotted(*),
.uni-section-secondary.uni-title> ::slotted(*),
.uni-section-tertiary.uni-title> ::slotted(*) {
  margin: 7px 0 1px 0 !important;
}

.uni-section-primary>.uni-title>*,
.uni-section-secondary>.uni-title>*,
.uni-section-tertiary>.uni-title>*,
.uni-section-primary.uni-title>*,
.uni-section-secondary.uni-title>*,
.uni-section-tertiary.uni-title>* {
  margin: 7px 0 1px 0 !important;
}


/* title in a card */

.uni-card .uni-title {
  margin-bottom: 20px;
}

.uni-card .uni-title> ::slotted(*) {
  margin: 0 !important;
}

.uni-card .uni-title>* {
  margin: 0 !important;
}

/* Layout with left side navigation */

.uni-layout-left-nav {
  display: grid;
  height: 100%;
  background: var(--uni-layout-left-nav-background, var(--uni-mouse, var(--uni-default-mouse)));
  grid-template-columns: 200px 1fr;
}

.uni-layout-left-nav > :first-child {
  background: var(--uni-layout-left-nav-side-background, var(--uni-inky, var(--uni-default-inky)));
  color: var(--uni-layout-left-nav-side-color, var(--uni-gray-5, var(--uni-default-gray-5)));
  padding: 20px 10px 20px 20px;
}

.uni-layout-left-nav > :first-child ::slotted(a) {
  border-left: 3px solid transparent !important;
  display: block !important;
  padding: 9px 7px !important;
  color: var(--uni-layout-left-nav-side-link-color, var(--uni-livid, var(--uni-default-livid))) !important;
  margin: 0 0 0 -10px !important;
}

.uni-layout-left-nav > :first-child a {
  border-left: 3px solid transparent !important;
  display: block !important;
  padding: 9px 7px !important;
  color: var(--uni-layout-left-nav-side-link-color, var(--uni-livid, var(--uni-default-livid))) !important;
  margin: 0 0 0 -10px !important;
}

.uni-layout-left-nav > :first-child ::slotted(a:hover) {
  color: var(--uni-layout-left-nav-side-link-color-hover, var(--uni-white, var(--uni-default-white))) !important;
}

.uni-layout-left-nav > :first-child a:hover {
  color: var(--uni-layout-left-nav-side-link-color-hover, var(--uni-white, var(--uni-default-white))) !important;
}

.uni-layout-left-nav > :first-child ::slotted(a[aria-current="page"]) {
  border-left: var(--uni-layout-left-nav-side-link-highlight, 3px solid var(--uni-blue, var(--uni-default-blue))) !important;
  color: var(--uni-layout-left-nav-side-link-color-hover, var(--uni-white, var(--uni-default-white))) !important;
}

.uni-layout-left-nav > :first-child a[aria-current="page"] {
  border-left: var(--uni-layout-left-nav-side-link-highlight, 3px solid var(--uni-blue, var(--uni-default-blue))) !important;
  color: var(--uni-layout-left-nav-side-link-color-hover, var(--uni-white, var(--uni-default-white))) !important;
}
